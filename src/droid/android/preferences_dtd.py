#!/usr/bin/python

# This file generated by a program. do not edit.


import pycopia.XML.POM

attribKey_894615857478139801 = pycopia.XML.POM.XMLAttribute(u'key', 1, 11, None)


attribValue_1027828500431950441 = pycopia.XML.POM.XMLAttribute(u'value', 1, 11, None)


attribName_926990637380460900 = pycopia.XML.POM.XMLAttribute(u'name', 1, 11, None)


attribType_1643611400229923569 = pycopia.XML.POM.XMLAttribute(u'type', pycopia.XML.POM.Enumeration((u'system', u'user')), 11, None)


attribExternal_xml_version_3172807686901683856 = pycopia.XML.POM.XMLAttribute(u'EXTERNAL_XML_VERSION', 1, 13, u'0.0')




# 
#     Licensed to the Apache Software Foundation (ASF) under one
#     or more contributor license agreements.  See the NOTICE file
#     distributed with this work for additional information
#     regarding copyright ownership.  The ASF licenses this file
#     to you under the Apache License, Version 2.0 (the
#     "License"); you may not use this file except in compliance
#     with the License.  You may obtain a copy of the License at
# 
#       http://www.apache.org/licenses/LICENSE-2.0
# 
#     Unless required by applicable law or agreed to in writing,
#     software distributed under the License is distributed on an
#     "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#     KIND, either express or implied.  See the License for the
#     specific language governing permissions and limitations
#     under the License.
#  


#  DTD for a Preferences tree. 


#  The preferences element is at the root of an XML document
#      representing a Preferences tree. 


class Preferences(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         u'EXTERNAL_XML_VERSION': attribExternal_xml_version_3172807686901683856, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	KWATTRIBUTES = {
         'EXTERNAL_XML_VERSION': attribExternal_xml_version_3172807686901683856, 
         }
	_name = u'preferences'


#  The preferences element contains an optional version attribute,
#       which specifies version of DTD. 


#  The root element has a map representing the root's preferences
#      (if any), and one node for each child of the root (if any). 


class Root(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         u'type': attribType_1643611400229923569, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	KWATTRIBUTES = {
         'type': attribType_1643611400229923569, 
         }
	_name = u'root'


#  Additionally, the root contains a type attribute, which
#      specifies whether it's the system or user root. 


#  Each node has a map representing its preferences (if any),
#      and one node for each child (if any). 


class Node(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         u'name': attribName_926990637380460900, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	KWATTRIBUTES = {
         'name': attribName_926990637380460900, 
         }
	_name = u'node'


#  Additionally, each node has a name attribute 


#  A map represents the preferences stored at a node (if any). 


class Map(pycopia.XML.POM.ElementNode):
	CONTENTMODEL = pycopia.XML.POM.ContentModel((True,))
	_name = u'map'


#  An entry represents a single preference, which is simply
#       a key-value pair. 


class Entry(pycopia.XML.POM.ElementNode):
	ATTRIBUTES = {
         u'value': attribValue_1027828500431950441, 
         u'key': attribKey_894615857478139801, 
         }
	CONTENTMODEL = pycopia.XML.POM.ContentModel(None)
	KWATTRIBUTES = {
         'value': attribValue_1027828500431950441, 
         'key': attribKey_894615857478139801, 
         }
	_name = u'entry'


GENERAL_ENTITIES = {}

# Cache for dynamic classes for this dtd.


_CLASSCACHE = {}


