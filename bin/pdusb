#!/usr/bin/python2.4
# -*- coding: us-ascii -*-
# vim:ts=2:sw=2:softtabstop=0:tw=74:smarttab:expandtab

# Copyright (C) 2008 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Control the USB connection to the DUT.

The USB connection is controlled by the power supplies charger power
supply. 
"""

import sys


from pycopia import getopt

from droid.instruments import core as instrumentcore

def pdusb(argv):
  """pdusb [-p <powersupply>] [on|off]

Enable or disable the USB connection to the DUT.

Usage:
  -p - set the name of the power supply to use (default ps1).

  "on" or "off" - turn the USB connection on or off.
  No parameter: report the current state of the USB connection.
"""
  device = "ps1"
  try:
    opts, longopts, args = getopt.getopt(argv[1:], "h?p:")
  except getopt.GetoptError, err:
    print >>sys.stderr, err
    return 2

  for opt, optarg in opts:
    if opt in ("-h", "-?"):
      print argv[0], ":"
      print pdusb.__doc__
      return 1
    elif opt == "-p":
      device = optarg

  ps = instrumentcore.GetInstrument(device)

  if len(args) >= 1:
    ps.charger_outputstate = args[0]
  if ps.charger_outputstate:
    print "USB ON"
    return 0
  else:
    print "USB OFF"
    return 1

sys.exit(pdusb(sys.argv))


